PS D:\Rust\Estudo\FirstRust> cargo
Rust's package manager

Usage: cargo [+toolchain] [OPTIONS] [COMMAND]
       cargo [+toolchain] [OPTIONS] -Zscript <MANIFEST_RS> [ARGS]...

Options:
  -V, --version             Print version info and exit
      --list                List installed commands
      --explain <CODE>      Run `rustc --explain CODE`
  -v, --verbose...          Use verbose output (-vv very verbose/build.rs output)   
  -q, --quiet               Do not print cargo log messages
      --color <WHEN>        Coloring: auto, always, never
  -C <DIRECTORY>            Change to DIRECTORY before doing anything (nightly-only)
      --frozen              Require Cargo.lock and cache are up to date
      --locked              Require Cargo.lock is up to date
      --offline             Run without accessing the network
      --config <KEY=VALUE>  Override a configuration value
  -Z <FLAG>                 Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details    
  -h, --help                Print help

Some common cargo commands are (see all commands with --list):
    build, b    Compile the current package
    check, c    Analyze the current package and report errors, but don't build object files
    clean       Remove the target directory
    doc, d      Build this package's and its dependencies' documentation
    init        Create a new cargo package in an existing directory
    remove      Remove dependencies from a manifest file
    run, r      Run a binary or example of the local package
    test, t     Run the tests
    search      Search registry for crates
    publish     Package and upload this package to the registry
    install     Install a Rust binary. Default location is $HOME/.cargo/bin
    uninstall   Uninstall a Rust binary

See 'cargo help <command>' for more information on a specific command.
PS D:\Rust\Estudo\FirstRust> cargo new gm-hash-map
     Created binary (application) `gm-hash-map` package
PS D:\Rust\Estudo\FirstRust> cargo new gm-hash-map
error: destination `D:\Rust\Estudo\FirstRust\gm-hash-map` already exists

Use `cargo init` to initialize the directory
PS D:\Rust\Estudo\FirstRust> cd gm-hash-map
PS D:\Rust\Estudo\FirstRust\gm-hash-map> ls


    Directory: D:\Rust\Estudo\FirstRust\gm-hash-map


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        10/14/2023  12:23 AM                src
-a----        10/14/2023  12:23 AM            180 Cargo.toml